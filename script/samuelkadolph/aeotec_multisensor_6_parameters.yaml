blueprint:
  name: Aeotec MultiSensor 6 Parameters
  description: Applies a set of standard paremeters to MultiSensor 6.
  domain: script
  author: Samuel Kadolph
  source_url: https://github.com/samuelkadolph/hass-blueprints/blob/main/script/samuelkadolph/aeotec_multisensor_6_parameters.yaml
  input:
    devices:
      name: Sensors
      description: Which sensors to apply standard parameters to?
      selector:
        device:
          multiple: true
          filter:
          - { manufacturer: AEON Labs, model: ZW100 }
    led:
      name: LED Blink
      selector:
        boolean:
    temp:
      name: Temperature Calibration
      selector:
        number:
            max: 127
            min: -128
            unit_of_measurement: 0.1 °
            mode: box

variables:
  led: !input led
  led_value: '{{ led and "0" or "1" }}'

sequence:
- service: zwave_js.set_config_parameter
  data: { parameter: 2, value: 0 }                          # Wake Device for 10 minutes After Power On
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 3, value: 300 }                        # PIR Sensor Timeout
  target: { device_id: !input devices }                     # 300 seconds
- service: zwave_js.set_config_parameter
  data: { parameter: 4, value: 5 }                          # PIR Sensitivity
  target: { device_id: !input devices }                     # 5
- service: zwave_js.set_config_parameter
  data: { parameter: 5, value: 1 }                          # Motion Sensor Report Type to Send
  target: { device_id: !input devices }                     # Basic CC Report
- service: zwave_js.set_config_parameter
  data: { parameter: 8, value: 30 }                         # Wake Up Timeout
  target: { device_id: !input devices }                     # 30 seconds
- service: zwave_js.set_config_parameter
  data: { parameter: 39, value: 20 }                        # Low Battery Threshold
  target: { device_id: !input devices }                     # 20 %
- service: zwave_js.set_config_parameter
  data: { parameter: 40, value: 1 }                         # Selective Reporting
  target: { device_id: !input devices }                     # Enable
- service: zwave_js.set_config_parameter
  data: { parameter: 41, bitmask: 0x00000F00, value: 1 }    # Temperature Threshold Unit
  target: { device_id: !input devices }                     # Celsius
- service: zwave_js.set_config_parameter
  data: { parameter: 41, bitmask: 0xFFFF0000, value: 20 }   # Temperature Change Threshold
  target: { device_id: !input devices }                     # 2.0
- service: zwave_js.set_config_parameter
  data: { parameter: 42, value: 5 }                         # Humidity Change Threshold
  target: { device_id: !input devices }                     # 5 %
- service: zwave_js.set_config_parameter
  data: { parameter: 43, value: 100 }                       # Luminance Change Threshold
  target: { device_id: !input devices }                     # 100 lux
- service: zwave_js.set_config_parameter
  data: { parameter: 44, value: 5 }                         # Battery Level Threshold
  target: { device_id: !input devices }                     # 5 %
- service: zwave_js.set_config_parameter
  data: { parameter: 45, value: 2 }                         # Ultraviolet Change Threshold
  target: { device_id: !input devices }                     # 2
- service: zwave_js.set_config_parameter
  data: { parameter: 46, value: 0 }                         # Low Temperature Alarm (-15 °C)
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x01, value: 0 }          # Report Below Temperature Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x02, value: 0 }          # Report Below Humidity Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x04, value: 0 }          # Report Below Luminance Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x08, value: 0 }          # Report Below Ultraviolet Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x10, value: 0 }          # Report Above Temperature Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x20, value: 0 }          # Report Above Humidity Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x40, value: 0 }          # Report Above Luminance Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 48, bitmask: 0x80, value: 0 }          # Report Above Ultraviolet Threshold
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 49, bitmask: 0x00000F00, value: 1 }    # Upper Temperature Limit Unit
  target: { device_id: !input devices }                     # Celsius
- service: zwave_js.set_config_parameter
  data: { parameter: 49, bitmask: 0xFFFF0000, value: 280 }  # Upper Temperature Limit
  target: { device_id: !input devices }                     # 28.0
- service: zwave_js.set_config_parameter
  data: { parameter: 50, bitmask: 0x00000F00, value: 1 }    # Lower Temperature Limit Unit
  target: { device_id: !input devices }                     # Celsius
- service: zwave_js.set_config_parameter
  data: { parameter: 50, bitmask: 0xFFFF0000, value: 0 }    # Lower Temperature Limit
  target: { device_id: !input devices }                     # 0.0
- service: zwave_js.set_config_parameter
  data: { parameter: 51, value: 60 }                        # Upper Humidity Limit
  target: { device_id: !input devices }                     # 60 %
- service: zwave_js.set_config_parameter
  data: { parameter: 52, value: 50 }                        # Lower Humidity Limit
  target: { device_id: !input devices }                     # 50 %
- service: zwave_js.set_config_parameter
  data: { parameter: 53, value: 1000 }                      # Upper Lighting Limit
  target: { device_id: !input devices }                     # 1000 lux
- service: zwave_js.set_config_parameter
  data: { parameter: 54, value: 100 }                       # Lower Lighting Limit
  target: { device_id: !input devices }                     # 100 lux
- service: zwave_js.set_config_parameter
  data: { parameter: 55, value: 8 }                         # Upper Ultraviolet Limit
  target: { device_id: !input devices }                     # 8
- service: zwave_js.set_config_parameter
  data: { parameter: 56, value: 4 }                         # Lower Ultraviolet Limit
  target: { device_id: !input devices }                     # 4
- service: zwave_js.set_config_parameter
  data: { parameter: 57, bitmask: 0x00FF, value: 1 }        # Recover Limit Temperature Unit
  target: { device_id: !input devices }                     # Celsius
- service: zwave_js.set_config_parameter
  data: { parameter: 57, bitmask: 0xFF00, value: 20 }       # Temperature Recover Limit
  target: { device_id: !input devices }                     # 2.0
- service: zwave_js.set_config_parameter
  data: { parameter: 58, value: 5 }                         # Humidity Recover Limit
  target: { device_id: !input devices }                     # 5 %
- service: zwave_js.set_config_parameter
  data: { parameter: 59, value: 100 }                       # Lighting Recover Limit
  target: { device_id: !input devices }                     # 100 lux
- service: zwave_js.set_config_parameter
  data: { parameter: 60, value: 2 }                         # Ultraviolet Recover Limit
  target: { device_id: !input devices }                     # 2
- service: zwave_js.set_config_parameter
  data: { parameter: 64, value: 1 }                         # Automatic Temperature Reporting Unit
  target: { device_id: !input devices }                     # Celsius
- service: zwave_js.set_config_parameter
  data: { parameter: 81, value: '{{ led_value }}' }         # LED Blinking
  target: { device_id: !input devices }
- service: zwave_js.set_config_parameter
  data: { parameter: 101, bitmask: 0x01, value: 1 }         # Automatic Report: Group 1 - Battery
  target: { device_id: !input devices }                     # Enable
- service: zwave_js.set_config_parameter
  data: { parameter: 101, bitmask: 0x10, value: 1 }         # Automatic Report: Group 1 - Ultraviolet
  target: { device_id: !input devices }                     # Enable
- service: zwave_js.set_config_parameter
  data: { parameter: 101, bitmask: 0x20, value: 1 }         # Automatic Report: Group 1 - Temperature
  target: { device_id: !input devices }                     # Enable
- service: zwave_js.set_config_parameter
  data: { parameter: 101, bitmask: 0x40, value: 1 }         # Automatic Report: Group 1 - Humidity
  target: { device_id: !input devices }                     # Enable
- service: zwave_js.set_config_parameter
  data: { parameter: 101, bitmask: 0x80, value: 1 }         # Automatic Report: Group 1 - Luminance
  target: { device_id: !input devices }                     # Enable
- service: zwave_js.set_config_parameter
  data: { parameter: 102, bitmask: 0x01, value: 0 }         # Automatic Report: Group 2 - Battery
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 102, bitmask: 0x10, value: 0 }         # Automatic Report: Group 2 - Ultraviolet
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 102, bitmask: 0x20, value: 0 }         # Automatic Report: Group 2 - Temperature
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 102, bitmask: 0x40, value: 0 }         # Automatic Report: Group 2 - Humidity
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 102, bitmask: 0x80, value: 0 }         # Automatic Report: Group 2 - Luminance
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 103, bitmask: 0x01, value: 0 }         # Automatic Report: Group 3 - Battery
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 103, bitmask: 0x10, value: 0 }         # Automatic Report: Group 3 - Ultraviolet
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 103, bitmask: 0x20, value: 0 }         # Automatic Report: Group 3 - Temperature
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 103, bitmask: 0x40, value: 0 }         # Automatic Report: Group 3 - Humidity
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 103, bitmask: 0x80, value: 0 }         # Automatic Report: Group 3 - Luminance
  target: { device_id: !input devices }                     # Disable
- service: zwave_js.set_config_parameter
  data: { parameter: 111, value: 3600 }                     # Automatic Reporting Interval: Group 1
  target: { device_id: !input devices }                     # 3600
- service: zwave_js.set_config_parameter
  data: { parameter: 112, value: 3600 }                     # Automatic Reporting Interval: Group 2
  target: { device_id: !input devices }                     # 3600
- service: zwave_js.set_config_parameter
  data: { parameter: 113, value: 3600 }                     # Automatic Reporting Interval: Group 3
  target: { device_id: !input devices }                     # 3600
- service: zwave_js.set_config_parameter
  data: { parameter: 201, bitmask: 0x00FF, value: 1 }       # Temperature Calibration Unit
  target: { device_id: !input devices }                     # Celsius
- service: zwave_js.set_config_parameter
  data: { parameter: 201, bitmask: 0xFF00, value: !input temp }
  target: { device_id: !input devices }
- service: zwave_js.set_config_parameter
  data: { parameter: 202, value: 0 }                        # Humidity Sensor Calibration
  target: { device_id: !input devices }                     # 0
- service: zwave_js.set_config_parameter
  data: { parameter: 203, value: 0 }                        # Luminance Sensor Calibration
  target: { device_id: !input devices }                     # 0
- service: zwave_js.set_config_parameter
  data: { parameter: 204, value: 0 }                        # Ultraviolet Sensor Calibration
  target: { device_id: !input devices }                     # 0
