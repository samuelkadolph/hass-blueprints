blueprint:
  name: HomeSeer WX-300 Lights
  description: Control lights (or fans/switches) with paddle taps on a HomeSeer WX-300 switch.
  domain: automation
  author: Samuel Kadolph
  source_url: https://github.com/samuelkadolph/hass-blueprints/blob/main/automation/samuelkadolph/homeseer_wx300_lights.yaml
  input:
    switch:
      name: Switch
      description: Which switch to use?
      selector:
        device:
          filter:
          - { manufacturer: HomeSeer Technologies, model: HS-WX300 }
          - { manufacturer: HomeSeer Technologies, model: HS-WD200+ }
          - { manufacturer: HomeSeer Technologies, model: HS-WS200+ }
    paddle_taps:
      name: Paddle Taps
      description: How many taps on a paddle are required?
      default: 'KeyPressed'
      selector:
        select:
          mode: dropdown
          options:
          - label: 'Single'
            value: 'KeyPressed'
          - label: 'Double'
            value: 'KeyPressed2x'
          - label: 'Triple'
            value: 'KeyPressed3x'
          - label: 'Quadruple'
            value: 'KeyPressed4x'
          - label: 'Quintuple'
            value: 'KeyPressed5x'
    subjects:
      name: Lights
      description: Which lights (or fans/switches) to control with the paddles?
      selector:
        entity:
          domain: ['fan', 'light', 'switch']
          multiple: true

mode: single
max_exceeded: silent

trigger_variables:
  paddle_taps: !input paddle_taps

triggers:
- trigger: event
  event_type: zwave_js_value_notification
  event_data:
    <<: &event_data
      device_id: !input switch
      command_class_name: Central Scene
      value: '{{ paddle_taps }}'
    property_key: '001'
  id: up_pressed
- trigger: event
  event_type: zwave_js_value_notification
  event_data:
    <<: *event_data
    property_key: '002'
  id: down_pressed

variables:
  subjects: !input subjects
  subjects_list: '{{ subjects is list and subjects or [subjects] }}'
  fans: '{{ subjects_list | select("search", "^fan\.") | list }}'
  lights: '{{ subjects_list | select("search", "^light\.") | list }}'
  switches: '{{ subjects_list | select("search", "^switch\.") | list }}'

actions:
- choose:
  - conditions:
    - '{{ trigger.id == "up_pressed" }}'
    sequence:
    - action: fan.turn_on
      target: { entity_id: '{{ fans }}' }
    - action: light.turn_on
      target: { entity_id: '{{ lights }}' }
    - action: switch.turn_on
      target: { entity_id: '{{ switches }}' }

  - conditions:
    - '{{ trigger.id == "down_pressed" }}'
    sequence:
    - action: fan.turn_off
      target: { entity_id: '{{ fans }}' }
    - action: light.turn_off
      target: { entity_id: '{{ lights }}' }
    - action: switch.turn_off
      target: { entity_id: '{{ switches }}' }
