blueprint:
  name: Zooz ZEN76/77 Lights
  description: Binds paddle presses on a Zooz ZEN67/77 to control lights (or fans/switches)
  domain: automation
  source_url: https://github.com/samuelkadolph/hass-blueprints/blob/main/automation/samuelkadolph/zooz_zen7677_light.yaml
  input:
    switch:
      name: Switch
      description: Which switch to use
      selector:
        device:
          filter:
          - manufacturer: Zooz
            model: ZEN76 800LR
          - manufacturer: Zooz
            model: ZEN77 800LR
    paddle_taps:
      name: Paddle Taps
      description: How many taps on a paddle to require
      default: 'KeyPressed'
      selector:
        select:
          mode: dropdown
          options:
          - label: 'Single'
            value: 'KeyPressed'
          - label: 'Double'
            value: 'KeyPressed2x'
          - label: 'Triple'
            value: 'KeyPressed3x'
          - label: 'Quadruple'
            value: 'KeyPressed4x'
          - label: 'Quintuple'
            value: 'KeyPressed5x'
    subjects:
      name: Lights
      description: Which lights (or fans/switches) to control with the paddles
      selector:
        entity:
          domain: ['fan', 'light', 'switch']
          multiple: true

mode: single
max_exceeded: silent

trigger_variables:
  paddle_taps: !input paddle_taps

trigger:
- platform: event
  event_type: zwave_js_value_notification
  event_data:
    device_id: !input switch
    command_class_name: Central Scene
    property_key: '001'
    value: '{{ paddle_taps }}'
  id: upPressed
- platform: event
  event_type: zwave_js_value_notification
  event_data:
    device_id: !input switch
    command_class_name: Central Scene
    property_key: '002'
    value: '{{ paddle_taps }}'
  id: downPressed

variables:
  subjects: !input subjects
  fans: '{{ subjects | select("search", "^fan.") | list }}'
  lights: '{{ subjects | select("search", "^light.") | list }}'
  switches: '{{ subjects | select("search", "^switch.") | list }}'

action:
- choose:
  - conditions:
    - condition: trigger
      id: upPressed
    sequence:
    - service: fan.turn_on
      target: { entity_id: '{{ fans }}' }
    - service: light.turn_on
      target: { entity_id: '{{ lights }}' }
    - service: switch.turn_on
      target: { entity_id: '{{ switches }}' }

  - conditions:
    - condition: trigger
      id: downPressed
    sequence:
    - service: fan.turn_off
      target: { entity_id: '{{ fans }}' }
    - service: light.turn_off
      target: { entity_id: '{{ lights }}' }
    - service: switch.turn_off
      target: { entity_id: '{{ switches }}' }
